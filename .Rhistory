require(rjava)
require(rJava)
require(knitr)
install.packages("knitr")
install.packages(c("RCurl", "class", "mgcv"))
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
v
activities<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
setwd("~/Documents/Documents/Learning/DataScienceSpecialization/ReproduciableResearch/RepData_PeerAssessment1")
setwd("~/Documents/Documents/Learning/DataScienceSpecialization/ReproduciableResearch/RepData_PeerAssessment1")
activities<-read.csv(unz("activity.zip","activity.csv"),header=TRUE)
numberOfMissingData<-nrow(activities[is.na(activities$steps),])
meanOfStepsPerInterval<-mean(activities$steps,na.rm=TRUE)
fixedActivities<-activities
fixedActivities[is.na(fixedActivities$steps),]$steps<-meanOfStepsPerInterval
datetype<-sapply(fixedActivities$date,FUN=function(date){
if(weekdays(as.Date(activities$date)) == "Sarturday" | weekdays(as.Date(activities$date)) == "Sunday"){
"weekend"
}else{
"weekday"
}
},simplify=TRUE)
datetype<-sapply(fixedActivities$date,FUN=function(date){
if(weekdays(as.Date((activities$)date)) == "Sarturday" | weekdays(as.Date(date)) == "Sunday"){
"weekend"
}else{
"weekday"
}
},simplify=TRUE)
datetype<-sapply(fixedActivities$date,FUN=function(date){
if(weekdays(as.Date(date) == "Sarturday" | weekdays(as.Date(date)) == "Sunday"){
"weekend"
}else{
"weekday"
}
},simplify=TRUE)
datetype<-sapply(fixedActivities$date,FUN=function(date){
if(weekdays(as.Date(date)) == "Sarturday" | weekdays(as.Date(date)) == "Sunday"){
"weekend"
}else{
"weekday"
}
},simplify=TRUE)
fixedActivities<-cbind(fixedActivities,datetype)
head(fixedActivities)
library(ggplot2)
qplot(y=stepsmdata=fixedActivities,facets=.~datetype)
qplot(y=steps,data=fixedActivities,facets=.~datetype)
library(lattice)
xyplot(steps|datetype,data=fixedActivities)
xyplot(steps~|datetype,data=fixedActivities)
xyplot(steps~interval|datetype,data=fixedActivities)
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",scales=c(400))
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps")
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",horizontal=TRUE)
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",horizontal=FALSE)
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l")
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~rowname|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~rownames|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~.|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(~steps|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~ |datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~ interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~ c(date,interval)|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~ c(date,interval)|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(steps~ interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(mean(steps)~ interval|datetype,data=fixedActivities,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
averageStepsByIntervalDatetype<-aggregate(fixedActivities$steps,by=c(interval=fixedActivities$interval,datetype=fixedActivities$datetype),FUN=mean)
averageStepsByIntervalDatetype<-aggregate(fixedActivities$steps,by=list(interval=fixedActivities$interval,datetype=fixedActivities$datetype),FUN=mean)
head(averageStepsByIntervalDatetype)
colnames(averageStepsByIntervalDatetype)<-c("interval","datetype","avgSteps")
xyplot(avgSteps~ interval|datetype,data=averageStepsByIntervalDatetype,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2))
xyplot(avgSteps~ interval|datetype,data=averageStepsByIntervalDatetype,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.linejoin(x, y, horizontal = FALSE, ...)
},)
xyplot(avgSteps~ interval|datetype,data=averageStepsByIntervalDatetype,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h=mean(averageStepsByIntervalDatetype$avgSteps),col="red")
},)
xyplot(avgSteps~ interval|datetype,data=averageStepsByIntervalDatetype,xlab="interval",ylab="Number of steps",type="l",layout=c(1,2),panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h=mean(averageStepsByIntervalDatetype$avgSteps),col="red")
panel.legend("topright",c("average line"),col=c("red"),lty=(1))
},)
